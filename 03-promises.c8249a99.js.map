{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,OAAQJ,SAASC,cAAc,mBAC/BI,IAAKL,SAASC,cAAc,WA2B9B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAlCIQ,iBAAiB,UAE5B,SAAsBC,GACpBA,EAAMC,iBAMN,IALA,IAAIC,EAAW,EACXC,EAAQC,OAAOvB,EAAKI,WAAWoB,OAC/BC,EAAOF,OAAOvB,EAAKK,UAAUmB,OAC7BlB,EAASiB,OAAOvB,EAAKM,OAAOkB,OAEvBE,EAAI,EAAGA,EAAIpB,EAAQoB,IAE1BlB,EADAa,GAAY,EACYC,GACrBK,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBZ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAG9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBZ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAG9DY,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Імпорт Notify\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('button'),\n};\n\nrefs.form, addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let position = 0;\n  let delay = Number(refs.firstDelay.value);\n  let step = Number(refs.delayStep.value);\n  let amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    position += 1;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","btn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","position1","delay1","Number","value","step","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c8249a99.js.map"}